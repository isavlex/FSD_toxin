mixin switches(options)
    if options.mode === "list"
        .switches
            -let state = "hidden"
            if options.state == "shown"
                -state = "shown"
            div(class="switches__heading switches__heading--hidden switches__heading--" + state)
                h3.heading-mb100= options.heading
            ul(class="switches__list switches__list--hidden switches__list--" + state)           
                each item, i in options.list
                    -let isChecked = false
                    each num in options.checked
                        if i === num
                            -isChecked = true
                    li.switches__item
                        label.switches__label
                            input(type="checkbox" class="switches__input" checked= isChecked)
                            span.checbox-list__text= item
    else if options.mode === "buttons"
        .switches
            .switches__head
                h3.heading-mb100= options.heading
            .switches__buttons
                each button, i in options.buttons
                    -let isChecked = false
                    each num in options.checked
                        if i === num
                            -isChecked = true
                    .switches__button
                        label.switches__label
                            input(type="checkbox" class="switches__input" checked= isChecked)
                            span.checbox-list__text= button
    else if options.mode === "toggles"
        .switches
            .switches__head
                h3.heading-mb100= options.heading
            .switches__toggles
                each toggle, i in options.toggles
                    -let isChecked = false
                    each num in options.checked
                        if i === num
                            -isChecked = true
                    .switches__toggle
                        label.switches__toggle-label
                            input(type="checkbox" class="switches__toggle-input" checked= isChecked)
                            span.switches__toggle-text= toggle
    else if options.mode === "rich"
        .switches
            .switches__head
                h3.heading-mb100= options.heading
            .switches__buttons
                each head, ihead in options.buttonsHead
                    -let text;
                    -let isChecked = false
                    each bText, itext in options.buttonsText
                        if itext === ihead
                            -text = bText
                    each num in options.checked
                        if ihead === num
                            -isChecked = true
                    .switches__button
                        label.switches__label
                            input(type="checkbox" class="switches__rich-input" checked= isChecked)
                            p.switches__rich-head.heading-mb75= head
                            span.checbox-list__rich-text= text
    else if options.mode === "radio"
        .switches
            .switches__head
                h3.heading-mb100= options.heading
            .switches__r-buttons
                each button, i in options.buttons
                    -let isChecked = false
                    if i === 0
                        -isChecked = true
                    .switches__r-button
                        label.switches__label
                            input(type="radio" class="switches__r-input" name= options.name checked= isChecked)
                            span.switches__r-text= button




                        